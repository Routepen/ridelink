<div class="modal fade" id="emailModal" tabindex="-1" role="dialog" aria-labelledby="emailModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
                            aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Confirm your email</h4>
            </div>
            <form action="javascript:confirmEmail()">
                <div class="modal-body">
                    Send me notifications at
                    <input type="email" class="form-control" id="emailInput" value="<%= user.facebook.email %>"
                           placeholder="Email">
                </div>
                <div class="modal-footer">
                    <input type="submit" class="btn btn-primary" value="Save">
                </div>
            </form>
        </div>
    </div>
</div>

<div class="col-md-4 core-container">
    <div style="padding-left:10px;">
        <div id="header-color-box" class="color-box">
            <h3 class="color-header">
                Create a Route
            </h3>
        </div>

        <!--             <span class="glyphicon glyphicon-paperclip" style="padding-right: 5px;"> </span>  Share your route:  <a href="/">  https://maps.com/127 </a>-->
        <form id="driver_input_form" class="row" action="javascript:submitForm();">
            <div id="form-color-box" class="color-box">
                <div>
                    <i class="material-icons" style="padding-left:10px ">adjust</i>
                    <input id="origin-input" name="origin" class="controls" type="text"
                           placeholder="Enter an origin location..." onPaste=""
                           onkeydown="if (event.keyCode == 13) { return false;}"
                           value="UCSB, Santa Barbara, CA, United States">
                </div>
                <!--<input id="origin" type="text" name='origin' class="form-control" placeholder="Origin"> -->
                <div>
                    <i class="material-icons" style="padding-left:10px">place</i>
                    <input autofocus id="destination-input" name="destination" class="controls" type="text"
                           placeholder="Enter a destination location..." onPaste=""
                           onkeydown="if (event.keyCode == 13) { return false;}">
                </div>
            </div>
            <!--<input id="destination" type="text" name = 'destination' class="form-control" placeholder="Destination"> -->
            <!--  <a class="btn btn-lg btn-success" type="submit" value="Submit" href="#" role="button">Route</a> -->


            <hr>
            <div>
                <div class="col-md-12">
                    <input id="num-seats" name="seats" class="controls" type="text"
                           placeholder="Enter number of seats..."><br>
                    <input id="charge" name="charge" class="controls" type="text" placeholder="$ Cost per seat" onPaste=""
                           onkeydown="if (event.keyCode == 13) { submitForm(); return false; }"><br>
                    <br>
                    <input id="requireInitialDeposit" name="requireInitialDeposit" type="checkbox" checked> Require
                    Initial Deposit <br>
                    <div font-size="8px" id="initialDepositNotes">
                      Initial deposits requires a 3 dollar additional charge for each rider
                      <br>
                      <a target="_blank" href="/html/faq/initialDeposit.html">What is this?</a>
                    </div>
                    <br>
                    <input id="date" name="date" class="controls" type="text" placeholder="Date..." onPaste=""
                           onkeydown="if (event.keyCode == 13) { submitForm(); return false; }">

                    <br>
                    <label style="font-size: 16px; padding-right: 10px;">Time</label>
                    <input id="time" name="time" class="controls" type="time" placeholder="Time..." onPaste=""
                           onkeydown="if (event.keyCode == 13) { submitForm(); return false; }" style="box-shadow:none">

                    <br><br>
                    <input type="submit" id="create-route" class="btn btn-md btn-success" value="Create Route">
                </div>
            </div>


            <input type="hidden" name="confirmedEmail" id="confirmed_email_input">
        </form>

        <br>

    </div>
</div>


<script type="text/javascript">

    var mapInputsCorrect = false;

    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            mapTypeControl: false,
            center: {lat: 34.4140, lng: -119.8489},
            zoom: 13
        });

        new AutocompleteDirectionsHandler(map);
    }

    function AutocompleteDirectionsHandler(map) {
        this.map = map;
        this.originPlaceId = null;
        this.destinationPlaceId = null;
        this.travelMode = 'DRIVING';
        var originInput = document.getElementById('origin-input');
        var destinationInput = document.getElementById('destination-input');
        this.directionsService = new google.maps.DirectionsService;
        this.directionsDisplay = new google.maps.DirectionsRenderer;
        this.directionsDisplay.setMap(map);

        var originAutocomplete = new google.maps.places.Autocomplete(
                originInput, {placeIdOnly: true});
        var destinationAutocomplete = new google.maps.places.Autocomplete(
                destinationInput, {placeIdOnly: true});


        this.setupPlaceChangedListener(originAutocomplete, 'ORIG');
        this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');

        /*this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);
        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(destinationInput);
        this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(modeSelector);
    */
    }


    AutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function(autocomplete, mode) {
        var me = this;
        autocomplete.bindTo('bounds', this.map);
        autocomplete.addListener('place_changed', function() {
            var place = autocomplete.getPlace();
            if (!place.place_id) {
                window.alert("Please select an option from the dropdown list.");
                return;
            }
            if (mode === 'ORIG') {
                me.originPlaceId = place.place_id;
            } else {
                me.destinationPlaceId = place.place_id;
            }
            me.route();
        });

    };

    AutocompleteDirectionsHandler.prototype.route = function() {
        if (!this.destinationPlaceId) {
            return;
        }

        var me = this;
        var origin;
        if (!this.originPlaceId) {
          origin = $('#origin-input').val();
        }
        else {
          origin = {'placeId': this.originPlaceId};
        }

        this.directionsService.route({
            origin: origin,
            destination: {'placeId': this.destinationPlaceId},
            travelMode: this.travelMode
        }, function(response, status) {
            if (status === 'OK') {
                mapInputsCorrect = true;
                me.directionsDisplay.setDirections(response);
            } else {
                window.alert('Directions request failed due to ' + status);
            }
        });
    };


    $(function () {
        $("#date").datepicker();
    });
    //$("#time").timepicker();

    /*
     var inputs = document.querySelectorAll('input[name="origin"], input[name="destination"], input[name="seats"], input[name="date"], input[name="num-seats"]');
     var button = document.querySelector('#create-route');

     [].forEach.call(inputs, function (e) {
     e.addEventListener('input', function () {
     var disabled = false;
     [].forEach.call(inputs, function (inputElem) {
     if(inputElem.value==''){
     disabled = true;
     }
     });
     // Change button if called
     if (disabled) {
     button.setAttribute('disabled', '');

     } else {
     button.removeAttribute('disabled');
     }
     });
     });
     document.getElementById("date")
     .addEventListener("keyup", function(event) {
     event.preventDefault();
     if (event.keyCode == 13) {
     document.getElementById("create-route").click();
     }
     });
     */
    function confirmEmail() {
        var email = document.getElementById("confirmed_email_input");
        var emailInput = document.getElementById("emailInput");
        email.value = emailInput.value;
        post();
    }

    function submitForm() {
        <% if (user && (!user.confirmedEmail || user.confirmedEmail == "")) { %>
          $("#emailModal").modal('show');
        <% } else { %>
          post();
        <% } %>
    }

    function isNum(s) {
      return s == ""+parseInt(s);
    }

    function getErrorMessage() {
      if (!mapInputsCorrect) { return "Please enter a valid origin and a valid destination"; }

      var seats = document.getElementById("num-seats").value;
      var charge = document.getElementById("charge").value.replace('$', '');
      var date = document.getElementById("date").value;
      var time = document.getElementById("time").value;

      if (!isNum(seats)) { return "Please enter a number for the number of people you can take"; }
      if (!isNum(charge)) { return "Please enter a number for the price per seat"; }
      if (date.split('/').length != 3) { return "Please enter a valid date"; }
      if (time == "") { return "Please enter the time you are leaving"; }

      return "";
    }

    var posted = false;
    function post() {
      errorMessage = getErrorMessage();
      if (errorMessage != "") {
        $('#errorMessage').html(errorMessage);
        $('#alertbox').show();
        return;
      }

      if (posted) return;
      posted = true;
      $('#create-route').button('loading');

      var seats = document.getElementById("num-seats");
      var charge = document.getElementById("charge");
      var requireInitialDeposit = document.getElementById("requireInitialDeposit");
      var date = document.getElementById("date");
      var time = document.getElementById("time");
      var email = document.getElementById("confirmed_email_input");
      var origin = document.getElementById("origin-input");
      var destination = document.getElementById("destination-input");

      var data = {
          seats: seats.value,
          charge: charge.value.replace('$', ''),
          requireInitialDeposit: requireInitialDeposit.value,
          date: date.value,
          time: time.value,
          origin: origin.value,
          destination: destination.value
      };

      var confirmedEmail = email.value;
      if (confirmedEmail) {
        data.confirmedEmail = confirmedEmail;
      }

      $.post('/route/new/', data, function(data, status){
        console.log(data, status);
        if (status == "success") {
          window.location.href = data;
        }
        else {
          posted = false;
          $('#create-route').button('reset');
        }
      })
      .error(function() { alert("Request failed. Try again later"); });
    }

</script>
