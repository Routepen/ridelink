<script type="text/javascript">

  function initMap() {
      var map = new google.maps.Map(document.getElementById('map'), {
          mapTypeControl: false,
          center: {lat: 34.4140, lng: -119.8489},
          zoom: 13
      });

      new showRoute(map);
  }


  var markers = {};

  function showRoute(map) {
    this.map = map;
    this.originPlaceId = null;
    this.destinationPlaceId = null;
    this.travelMode = 'DRIVING';
    this.directionsService = new google.maps.DirectionsService;
    this.directionsDisplay = new google.maps.DirectionsRenderer;
    this.directionsDisplay.setMap(map);
    this.geocoder = new google.maps.Geocoder();

    var waypoints = [];
    <% for (var i = 0; i < routeData.confirmedRiders.length; i++) { %>
      waypoints.push({
        location: "<%= routeData.dropOffs[routeData.confirmedRiders[i]] %>",
        stopover: true
      });
    <% } %>

    me = this;

    this.directionsService.route({
      origin: "<%= routeData.origin %>",
      destination: "<%= routeData.destination %>",
      travelMode: this.travelMode,
      waypoints: waypoints,
      optimizeWaypoints: true
    }, function(response, status) {
      if (status === 'OK') {
        console.log(response.routes[0].warnings);
        me.directionsDisplay.setDirections(response);
        me.allowForPinDropping(map);
        me.dropInitialPins(map);
      } else {
        window.alert('Directions request failed due to ' + status);
      }
    });
  }

  showRoute.prototype.dropInitialPins = function(map) {

    var contentString;

    <% for (var i = 0; i < routeData.riders.length; i++) { %>
        this.geocoder.geocode( { 'address': "<%= routeData.dropOffs[routeData.riders[i]._id] %>" }, function(results, status) {
          contentString = "<div><%= routeData.riders[i].facebook.name %></div>";

          <% if (user && routeData.driver._id.toString() == user._id.toString()) { %>
            contentString += '<form action="/route/confirmrider" method="post">' +
                              '<input type="hidden" name="userId" value="<%= routeData.riders[i]._id %>">' +
                              '<input type="hidden" name="routeId" value="<%= routeData._id %>">' +
                              '<input type="submit" value="Confirm">' +
                              '</form>';
            <% } %>


          var infowindow = new google.maps.InfoWindow({
            content: contentString
          });

          markers["<%= routeData.riders[i]._id %>"] = markers["<%= routeData.riders[i]._id %>"] || new google.maps.Marker({
            map: map,
            draggable: true,
            position: results[0].geometry.location,
            title: "<%= routeData.riders[i].facebook.name %>"
          });

          markers["<%= routeData.riders[i]._id %>"].addListener('click', function() {
            infowindow.open(map, markers["<%= routeData.riders[i]._id %>"]);
          });

        });
    <% } %>
  }

  showRoute.prototype.allowForPinDropping = function(map) {
    this.dropOffInput = document.getElementById("pac-input");
    var dropOffAutocomplete = new google.maps.places.Autocomplete(
            this.dropOffInput, {placeIdOnly: true});

    this.setupPlaceChangedListener(dropOffAutocomplete)
  }

  showRoute.prototype.setupPlaceChangedListener = function(autocomplete) {
    var map = this.map;
    var geocoder = this.geocoder;
    var me = this;

    autocomplete.bindTo('bounds', this.map);
    autocomplete.addListener('place_changed', function() {
      <% if (user) { %>
          var place = autocomplete.getPlace();
          if (!place.place_id) {
              window.alert("Please select an option from the dropdown list.");
              return;
          }
          geocoder.geocode( { 'address': place.name }, function(results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
              markers["<%= user._id %>"] = markers["<%= user._id %>"] || new google.maps.Marker({
                  map: map,
                  draggable: true,
                  position: results[0].geometry.location
              });

              markers["<%= user._id %>"].setPosition(results[0].geometry.location);

            } else {
              alert("Couln't map to " + place.name + " because " + status);
            }
          });
        <% } else { %>
          alert("please log in first");
        <% } %>
      });
  };

</script>
