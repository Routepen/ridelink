<script type="text/javascript">

  <% include ./table %>
  <% include ./map %>
  <% include ./info_display %>
  <% include ./clock %>
  <% include ./http %>
  <% include ./heading %>
  <% include ./modals/join_ride %>
  <% include ./modals/facebook %>
  <% include ./helpers/route_data_updater %>

  var routeData = <%- JSON.stringify(routeData) %>;
  if (!routeData.dropOffs) { routeData.dropOffs = {}; }

  var user = <%- JSON.stringify(user || '') %>
  var userStatus = {
    isRider: <%= isRider %>,
    confirmedRider: <%= confirmedRider %>,
    isDriver: <%= isDriver %>,
    view: "<%= view %>"
  };


  var mapHandler;



  function initMap() {
    var map = new google.maps.Map(document.getElementById('map'), {
      mapTypeControl: false,
      center: {lat: 34.4140, lng: -119.8489},
      zoom: 13
    });

    mapHandler = new mapManager(map, routeData);
    var tableManager = new table(document.getElementById("tableDiv"), routeData);
    var httpManager = new http(routeData);
    var headingManager = new heading(user, userStatus, routeData);
    var routeDataUpdater = new RouteDataUpdater(routeData);
    var joinRideModal = new JoinRide();
    var facebookModal = new Facebook();

    var infoDisplay = new InfoDisplay(routeData, mapHandler);

    mapHandler.addListener('onInfoWindowClosed', function()  {
      tableManager.unHighlightTable();
    });

    mapHandler.addListener('riderClicked', function(riderId)  {
      tableManager.hightlightInTable(riderId);
    });

    var riderJoinRequestAddress;
    mapHandler.addListener('onRideRequestClicked', function(address) {
      console.log(address);
      riderJoinRequestAddress = address;
      joinRideModal.show();
    });

    joinRideModal.addListener('joinRideClicked', function(baggage) {
      console.log(baggage);
      joinRideModal.grayOutButton();

      httpManager.addRider(user._id, riderJoinRequestAddress, baggage, function() {
        routeDataUpdater.addRider(user, userStatus, riderJoinRequestAddress, baggage);

        joinRideModal.restoreButton();
        joinRideModal.hide();
        tableManager.setUpTable();
        mapHandler.hideDropOffMarker();
        mapHandler.setMarkers();
        headingManager.onUserStatusChanged();
      });
    })

    infoDisplay.setUpEditability();
    infoDisplay.addListener('valueChanged', function(name, value) {
      console.log(name, value);
      var data = {
        routeId: routeData._id,
        updating: name,
        distance: mapHandler.distance
      }
      data[name] = value;

      $.post("/route/update", data, function(data, result) {
        routeData.stopsCoor = data.stopsCoor;
        routeData.originCoor = data.originCoor;
        routeData.destinationCoor = data.destinationCoor;
      });

    });

    httpManager.addListener('ridersChanged', function() {
      mapHandler.drawMap(function() {
        mapHandler.setMarkers();
      });

      tableManager.setUpTable();
      checkSeatsLeft();
    });

    headingManager.addListener('dropOffInputted', function(autocomplete) {
      mapHandler.rideRequested(autocomplete);
    });

    headingManager.addListener('cancelRiderRequest', function() {
      httpManager.cancelRiderRequest(routeData, function() {
        routeDataUpdater.cancelRiderRequest(user, userStatus, routeData);
        tableManager.setUpTable();
        mapHandler.removeMarker(user._id);
        headingManager.onUserStatusChanged();
      });
    });

    headingManager.addListener('showPostClicked', function() {
      facebookModal.show();
    });

    tableManager.addListener('confirmRiderClicked', function(riderId) {
      httpManager.confirmRider(riderId, routeData, function() {
        routeDataUpdater.confirmRider(riderId, routeData);
        tableManager.setUpTable();
        mapHandler.drawMap();
      });
    });

    tableManager.addListener('removeRiderClicked', function(riderId) {
      httpManager.removeRider(riderId, routeData, function() {
        routeDataUpdater.removeRider(riderId, routeData);
        tableManager.setUpTable();
        mapHandler.drawMap();
      });
    });
  }



  function checkSeatsLeft() {
    var seatsLeft = routeData.seats - routeData.confirmedRiders.length;
    if (seatsLeft <= 0) {
      $("#rideIsFull").show();
    }
    else {
      $("#rideIsFull").hide();
    }
  }


  var shareableLinkStatus = 0;
  function toggleShareableLink() {
    $('#shareableLink>input').val(window.location.hostname + "/route?id=<%= routeData.shortId || routeData._id %>");
    if (shareableLinkStatus == 0) {
        $('#shareableLink').show();
        $('#getLinkText').html("Hide link");
        shareableLinkStatus = 1;
    }
    else {
      $('#shareableLink').hide();
      $('#getLinkText').html("Copy link");
      shareableLinkStatus = 0;
    }
  }


  checkSeatsLeft();

  <% if (isRider && !confirmedRider) { %>
    $('#cancelRequestButton').show();
  <% } %>

</script>
