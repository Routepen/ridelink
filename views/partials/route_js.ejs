<script type="text/javascript">

  <% include ./table %>
  <% include ./map %>
  <% include ./info_display %>
  <% include ./clock %>
  <% include ./http %>
  <% include ./heading %>

  var routeData = <%- JSON.stringify(routeData) %>;
  var user = <%- JSON.stringify(user || '') %>


  var mapHandler;



  function initMap() {
      var map = new google.maps.Map(document.getElementById('map'), {
        mapTypeControl: false,
        center: {lat: 34.4140, lng: -119.8489},
        zoom: 13
      });

      mapHandler = new mapManager(map, routeData);

      mapHandler.addListener('onInfoWindowClosed', function()  {
        tableManager.unHighlightTable();
      });

      mapHandler.addListener('riderClicked', function(riderId)  {
        tableManager.hightlightInTable(riderId);
      });

      var tableManager = new table(document.getElementById("tableDiv"), routeData);
      var httpManager = new http();
      var headingManager = new heading();

      var infoDisplay = new InfoDisplay(routeData, mapHandler);
      infoDisplay.setUpEditability();
      infoDisplay.addListener('valueChanged', function(name, value) {
        console.log(name, value);
        var data = {
          routeId: routeData._id,
          updating: name,
          distance: mapHandler.distance
        }
        data[name] = value;

        $.post("/route/update", data, function(data, result) {
          routeData.stopsCoor = data.stopsCoor;
          routeData.originCoor = data.originCoor;
          routeData.destinationCoor = data.destinationCoor;
        });

      });

      httpManager.addListener('ridersChanged', function() {
        mapHandler.drawMap(function() {
          mapHandler.setMarkers();
        });

        tableManager.setUpTable();
        checkSeatsLeft();
      });

      headingManager.addListener('dropOffInputted', function(autocomplete) {
        mapHandler.rideRequested(autocomplete);
      });
  }

  function markPaid(id, btn) {
    var post = {
      userId: id,
      routeId: routeData._id
    };

    $(btn).button('loading');

    $.post("/route/markpaid", post, function(data, textStatus) {
      $(btn).button('reset');
      routeData.riderStatus = routeData.riderStatus || {};
      routeData.riderStatus[id] = routeData.riderStatus[id] || {};
      routeData.riderStatus[id].paid = true;
      setUpTable();
    });
  }

  function removeRider(id, btn) {
    var post = {
      userId: id,
      routeId: routeData._id
    };

    $(btn).button('loading');

    $.post("/route/removerider", post, function(data, textStatus) {
      for (var i = 0; i < routeData.confirmedRiders.length; i++) {
        var rider = routeData.confirmedRiders[i];
        if (rider._id == id) {
          routeData.riders.push(rider);
          routeData.confirmedRiders.splice(i, 1);
        }
      }
      $("#seatsText>span").html(routeData.seats - routeData.confirmedRiders.length);
      setUpTable();
      checkSeatsLeft();
      mapHandler.drawMap(function() {
        mapHandler.setMarkers();
      });
      $(btn).button('reset');
    });
  }

  function cancelRequest(btn) {
    var userId = "<%= userId %>";
    $(btn).button("loading");

    var post = {
      userId: userId,
      routeId: routeData._id
    };

    $.post("/route/cancelrequest", post, function(data, textStatus) {
      var riderDeleted;
      for (var i = 0; i < routeData.riders.length; i++) {
        var rider = routeData.riders[i];
        if (rider._id == userId) {
          riderDeleted = rider;
          routeData.riders.splice(i, 1);
        }
      }
      setUpTable();
      if (riderDeleted && markers[riderDeleted._id]) {
        markers[riderDeleted._id].setMap(null);
        delete markers[riderDeleted._id];
      }
      if (riderDeleted && infoWindows[riderDeleted._id]) { delete infoWindows[riderDeleted._id]; }

      mapHandler.drawMap(function() {
        mapHandler.setMarkers();
      });


      $(btn).css('visibility', 'hidden');
      $(btn).button('reset');

      var textDiv = $('#dropOffText');
      var editableDiv = $('#dropOffTextEditable');
      var span = textDiv.find('span');
      var input = editableDiv.find('input');
      var newValue = "";
      span.html(newValue);
      textDiv.hide();
      editableDiv.show();
    });

  }

  function checkSeatsLeft() {
    var seatsLeft = routeData.seats - routeData.confirmedRiders.length;
    if (seatsLeft <= 0) {
      $("#rideIsFull").show();
    }
    else {
      $("#rideIsFull").hide();
    }
  }


  var shareableLinkStatus = 0;
  function toggleShareableLink() {
    $('#shareableLink>input').val(window.location.hostname + "/route?id=<%= routeData.shortId || routeData._id %>");
    if (shareableLinkStatus == 0) {
        $('#shareableLink').show();
        $('#getLinkText').html("Hide link");
        shareableLinkStatus = 1;
    }
    else {
      $('#shareableLink').hide();
      $('#getLinkText').html("Copy link");
      shareableLinkStatus = 0;
    }
  }


  function submitPayment() {
    $.post('/route/riderpaid', {routeId: "<%= routeId %>"}, function(error, message) {

    });
  }

  checkSeatsLeft();

  <% if (isRider && !confirmedRider) { %>
    $('#cancelRequestButton').show();
  <% } %>

</script>
