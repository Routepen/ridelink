{"version":3,"sources":["googlemaps.js"],"names":[],"mappings":"AAAA;;;AAGA,SAAS,OAAT,GAAmB;AACf,QAAI,MAAM,IAAI,OAAO,IAAP,CAAY,GAAhB,CAAoB,SAAS,cAAT,CAAwB,KAAxB,CAApB,EAAoD;AAC1D,wBAAgB,KAD0C;AAE1D,gBAAQ,EAAC,KAAK,OAAN,EAAe,KAAK,CAAC,QAArB,EAFkD;AAG1D,cAAM;AAHoD,KAApD,CAAV;;AAMA,QAAI,6BAAJ,CAAkC,GAAlC;AACH;;AAED,SAAS,6BAAT,CAAuC,GAAvC,EAA4C;AACxC,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,aAAL,GAAqB,IAArB;AACA,SAAK,kBAAL,GAA0B,IAA1B;AACA,SAAK,UAAL,GAAkB,SAAlB;AACA,QAAI,cAAc,SAAS,cAAT,CAAwB,cAAxB,CAAlB;AACA,QAAI,mBAAmB,SAAS,cAAT,CAAwB,mBAAxB,CAAvB;AACA,SAAK,iBAAL,GAAyB,IAAI,OAAO,IAAP,CAAY,iBAAhB,EAAzB;AACA,SAAK,iBAAL,GAAyB,IAAI,OAAO,IAAP,CAAY,kBAAhB,EAAzB;AACA,SAAK,iBAAL,CAAuB,MAAvB,CAA8B,GAA9B;;AAEA,QAAI,qBAAqB,IAAI,OAAO,IAAP,CAAY,MAAZ,CAAmB,YAAvB,CACrB,WADqB,EACR,EAAC,aAAa,IAAd,EADQ,CAAzB;AAEA,QAAI,0BAA0B,IAAI,OAAO,IAAP,CAAY,MAAZ,CAAmB,YAAvB,CAC1B,gBAD0B,EACR,EAAC,aAAa,IAAd,EADQ,CAA9B;;AAIA,SAAK,yBAAL,CAA+B,kBAA/B,EAAmD,MAAnD;AACA,SAAK,yBAAL,CAA+B,uBAA/B,EAAwD,MAAxD;;AAEA;;;;AAIH;;AAGD,8BAA8B,SAA9B,CAAwC,yBAAxC,GAAoE,UAAS,YAAT,EAAuB,IAAvB,EAA6B;AAC7F,QAAI,KAAK,IAAT;AACA,iBAAa,MAAb,CAAoB,QAApB,EAA8B,KAAK,GAAnC;AACA,iBAAa,WAAb,CAAyB,eAAzB,EAA0C,YAAW;AACjD,YAAI,QAAQ,aAAa,QAAb,EAAZ;AACA,YAAI,CAAC,MAAM,QAAX,EAAqB;AACjB,mBAAO,KAAP,CAAa,iDAAb;AACA;AACH;AACD,YAAI,SAAS,MAAb,EAAqB;AACjB,eAAG,aAAH,GAAmB,MAAM,QAAzB;AACH,SAFD,MAEO;AACH,eAAG,kBAAH,GAAwB,MAAM,QAA9B;AACH;AACD,WAAG,KAAH;AACH,KAZD;AAcH,CAjBD;;AAmBA,8BAA8B,SAA9B,CAAwC,KAAxC,GAAgD,YAAW;AACvD,QAAI,CAAC,KAAK,aAAN,IAAuB,CAAC,KAAK,kBAAjC,EAAqD;AACjD;AACH;AACD,QAAI,KAAK,IAAT;;AAEA,SAAK,iBAAL,CAAuB,KAAvB,CAA6B;AACzB,gBAAQ,EAAC,WAAW,KAAK,aAAjB,EADiB;AAEzB,qBAAa,EAAC,WAAW,KAAK,kBAAjB,EAFY;AAGzB,oBAAY,KAAK;AAHQ,KAA7B,EAIG,UAAS,QAAT,EAAmB,MAAnB,EAA2B;AAC1B,YAAI,WAAW,IAAf,EAAqB;AACjB,eAAG,iBAAH,CAAqB,aAArB,CAAmC,QAAnC;AACH,SAFD,MAEO;AACH,mBAAO,KAAP,CAAa,sCAAsC,MAAnD;AACH;AACJ,KAVD;AAWH,CAjBD","file":"googlemaps-compiled.js","sourcesContent":["/**\r\n * Created by Victor on 3/2/2017.\r\n */\r\nfunction initMap() {\r\n    var map = new google.maps.Map(document.getElementById('map'), {\r\n        mapTypeControl: false,\r\n        center: {lat: 34.4140, lng: -119.8489},\r\n        zoom: 13\r\n    });\r\n\r\n    new AutocompleteDirectionsHandler(map);\r\n}\r\n\r\nfunction AutocompleteDirectionsHandler(map) {\r\n    this.map = map;\r\n    this.originPlaceId = null;\r\n    this.destinationPlaceId = null;\r\n    this.travelMode = 'DRIVING';\r\n    var originInput = document.getElementById('origin-input');\r\n    var destinationInput = document.getElementById('destination-input');\r\n    this.directionsService = new google.maps.DirectionsService;\r\n    this.directionsDisplay = new google.maps.DirectionsRenderer;\r\n    this.directionsDisplay.setMap(map);\r\n\r\n    var originAutocomplete = new google.maps.places.Autocomplete(\r\n        originInput, {placeIdOnly: true});\r\n    var destinationAutocomplete = new google.maps.places.Autocomplete(\r\n        destinationInput, {placeIdOnly: true});\r\n\r\n\r\n    this.setupPlaceChangedListener(originAutocomplete, 'ORIG');\r\n    this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');\r\n\r\n    /*this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);\r\n     this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(destinationInput);\r\n     this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(modeSelector);\r\n     */\r\n}\r\n\r\n\r\nAutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function(autocomplete, mode) {\r\n    var me = this;\r\n    autocomplete.bindTo('bounds', this.map);\r\n    autocomplete.addListener('place_changed', function() {\r\n        var place = autocomplete.getPlace();\r\n        if (!place.place_id) {\r\n            window.alert(\"Please select an option from the dropdown list.\");\r\n            return;\r\n        }\r\n        if (mode === 'ORIG') {\r\n            me.originPlaceId = place.place_id;\r\n        } else {\r\n            me.destinationPlaceId = place.place_id;\r\n        }\r\n        me.route();\r\n    });\r\n\r\n};\r\n\r\nAutocompleteDirectionsHandler.prototype.route = function() {\r\n    if (!this.originPlaceId || !this.destinationPlaceId) {\r\n        return;\r\n    }\r\n    var me = this;\r\n\r\n    this.directionsService.route({\r\n        origin: {'placeId': this.originPlaceId},\r\n        destination: {'placeId': this.destinationPlaceId},\r\n        travelMode: this.travelMode\r\n    }, function(response, status) {\r\n        if (status === 'OK') {\r\n            me.directionsDisplay.setDirections(response);\r\n        } else {\r\n            window.alert('Directions request failed due to ' + status);\r\n        }\r\n    });\r\n};\r\n\r\n"]}