{"version":3,"sources":["payments.js"],"names":[],"mappings":"AAAA,MAAM,YAAY,QAAQ,WAAR,CAAlB;;AAGA,IAAI,UAAU,UAAU,OAAV,CAAkB;AAC9B,eAAa,UAAU,WAAV,CAAsB,OADL;AAE9B,cAAY,kBAFkB;AAG9B,aAAW,kBAHmB;AAI9B,cAAY;AAJkB,CAAlB,CAAd;;AAOA,OAAO,OAAP,GAAiB;AACf,SAAO,UAAS,GAAT,EAAc,IAAd,EAAoB,KAApB,EAA2B;;AAEhC,QAAI,GAAJ,CAAQ,eAAR,EAAyB,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC3C,UAAI,CAAC,IAAI,IAAT,EAAe;AAAE,eAAO,IAAI,GAAJ,CAAQ,EAAR,CAAP;AAAqB;AACtC,cAAQ,WAAR,CAAoB,QAApB,CAA6B,EAA7B,EAAiC,UAAU,GAAV,EAAe,QAAf,EAAyB;AACxD,YAAI,IAAJ,CAAS,SAAS,WAAlB;AACD,OAFD;AAGD,KALD;;AAOA,QAAI,IAAJ,CAAS,WAAT,EAAsB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACxC,UAAI,CAAC,IAAI,IAAT,EAAe;AAAE,eAAO,IAAI,GAAJ,CAAQ,EAAR,CAAP;AAAqB;;AAEtC,YAAM,QAAN,CAAe,IAAI,IAAJ,CAAS,OAAxB,EAAiC,QAAjC,CAA0C,QAA1C,EAAoD,IAApD,CAAyD,UAAS,GAAT,EAAc,KAAd,EAAqB;AAC5E,YAAI,OAAO,CAAC,KAAZ,EAAmB;AAAE,iBAAO,IAAI,GAAJ,CAAQ,iBAAR,CAAP;AAAoC;;AAEzD,YAAI,qBAAqB,IAAI,IAAJ,CAAS,oBAAlC;AACA,gBAAQ,WAAR,CAAoB,IAApB,CAAyB;AACvB,kBAAQ,IADe;AAEvB,8BAAoB,kBAFG;AAGvB,mBAAS;AACP,iCAAqB;AADd;AAHc,SAAzB,EAMG,UAAU,GAAV,EAAe,MAAf,EAAuB;AACxB,cAAI,CAAC,GAAD,IAAQ,OAAO,OAAnB,EAA4B;;AAE1B,kBAAM,WAAN,CAAkB,IAAI,IAAJ,CAAS,GAAT,CAAa,QAAb,EAAlB,EAA2C,IAA3C,GAAkD,IAAlD;AACA,kBAAM,YAAN,CAAmB,aAAnB;AACA,kBAAM,IAAN,CAAW,UAAS,GAAT,EAAc;AACvB,kBAAI,GAAJ,EAAS;AAAE,uBAAO,IAAI,GAAJ,CAAQ,IAAI,QAAJ,EAAR,CAAP;AAAiC;AAC5C,kBAAI,QAAJ,CAAa,gBAAgB,MAAM,OAAN,IAAiB,MAAM,EAAvC,CAAb;AACD,aAHD;;AAKA,iBAAK,QAAL,CAAc;AACZ,yBAAW,IAAI,IADH;AAEf,qBAAO,KAFQ;AAGhB,2BAAa;AACZ,sBAAM;AADM;AAHG,aAAd;;AAQA,iBAAK,QAAL,CAAc;AACZ,yBAAW,MAAM,MADL;AAEf,qBAAO,KAFQ;AAGZ,qBAAO,IAAI,IAHC;AAIhB,4BAAc;AACb,2BAAW;AADE;AAJE,aAAd;AASD,WA1BD,MA2BK;AACH,oBAAQ,GAAR,CAAY,MAAZ,EAAoB,GAApB;AACA,gBAAI,GAAJ,CAAQ,SAAR;AACD;AACF,SAtCD;AAuCD,OA3CD;AA4CD,KA/CD;AAgDD;AA1Dc,CAAjB","file":"payments-compiled.js","sourcesContent":["const braintree = require(\"braintree\");\r\n\r\n\r\nvar gateway = braintree.connect({\r\n  environment: braintree.Environment.Sandbox,\r\n  merchantId: \"hj9dggqj5z5nf5xr\",\r\n  publicKey: \"x23dmbp37mfcfn83\",\r\n  privateKey: \"17e997e52717609ee3bb4e2fc1fa619d\"\r\n});\r\n\r\nmodule.exports = {\r\n  setUp: function(app, mail, Route) {\r\n\r\n    app.get(\"/client_token\", function (req, res) {\r\n      if (!req.user) { return res.end(\"\"); }\r\n      gateway.clientToken.generate({}, function (err, response) {\r\n        res.send(response.clientToken);\r\n      });\r\n    });\r\n\r\n    app.post(\"/checkout\", function (req, res) {\r\n      if (!req.user) { return res.end(\"\"); }\r\n\r\n      Route.findById(req.body.routeId).populate(\"driver\").exec(function(err, route) {\r\n        if (err || !route) { return res.end(\"route not found\"); }\r\n\r\n        var nonceFromTheClient = req.body.payment_method_nonce;\r\n        gateway.transaction.sale({\r\n          amount: \"10\",\r\n          paymentMethodNonce: nonceFromTheClient,\r\n          options: {\r\n            submitForSettlement: true\r\n          }\r\n        }, function (err, result) {\r\n          if (!err && result.success) {\r\n\r\n            route.riderStatus[req.user._id.toString()].paid = true;\r\n            route.markModified(\"riderStatus\");\r\n            route.save(function(err) {\r\n              if (err) { return res.end(err.toString()); }\r\n              res.redirect('/route?id=' + (route.shortId || route.id));\r\n            });\r\n\r\n            mail.sendMail({\r\n              recipient: req.user,\r\n        \t\t\troute: route,\r\n      \t\t\t\tnotifyRider: {\r\n      \t\t\t\t\tpaid: true\r\n        \t\t\t}\r\n        \t\t});\r\n\r\n            mail.sendMail({\r\n              recipient: route.driver,\r\n        \t\t\troute: route,\r\n              rider: req.user,\r\n      \t\t\t\tnotifyDriver: {\r\n      \t\t\t\t\triderPaid: true\r\n      \t\t\t\t}\r\n        \t\t});\r\n\r\n          }\r\n          else {\r\n            console.log(result, err);\r\n            res.end(\"failure\");\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n}\r\n"]}